{
  "pf2e-automations": {
    "FormRules": {
      "Title": "Rules"
    },
    "targetType": {
      "None": "None",
      "SelfEffect": "Apply effect to self when action is used",
      "SelfEffectActorNextTurn": "Apply effect to self when action is used until Actor next turn(For Saving Throws)",
      "TargetEffect": "Apply effect to target when is used",
      "TargetEffectActorNextTurn": "Apply effect to target when is used until Actor next turn",
      "SelfOrTargetEffect": "Apply effect to self or 1 target when action is used",
      "TargetsEffect": "Apply effect to all targets when action is used",
      "SelfOrTargetsEffect": "Apply effect to self or targets when action is used",
      "TargetRemoveCondition": "Remove condition from target",
      "TargetRemoveEffect": "Remove effect from target",
      "SelfRemoveCondition": "Remove condition from self",
      "SelfRemoveEffect": "Remove effect from self",
      "SelfAddCondition": "Add condition to self",
      "TargetAddCondition": "Add condition to target",
      "SelfDamage": "Damage yourself",
      "TargetDamage": "Damage target",
      "RunMacro": "Run Macro",
      "TargetAllyWithinRange": "Target Self And Ally within range",
      "OnlyAllyWithinRange": "Ally within range",
      "DecreaseBadgeEffect": "Decrease Badge Value of Effect",
      "IncreaseBadgeEffect": "Increase Badge Value of Effect",
      "TargetDecreaseBadgeEffect": "Decrease Badge Value of Target Effect",
      "TargetIncreaseBadgeEffect": "Increase Badge Value of Target Effect",
      "PartyEffect": "Apply effect to members of Party",
      "TurnOnOption": "Turn On Option",
      "TurnOffOption": "Turn Off Option",
      "ImmunitySelfEffect": "Add Immunity to Actor",
      "IncreaseConditionByStep": "Increase condition by step",
      "IncreaseTargetConditionByStep": "Increase target condition by step",
      "SelfAddPersistentDamage": "Apply Persistent Damage to self",
      "TargetAddPersistentDamage": "Apply Persistent Damage to target",
      "OriginEffect": "Apply Effect to owner"
    },
    "SETTINGS": {
      "Menu": {
        "rollSettingsMenu.Name": "Roll Settings Menu",
        "combatSettingsMenu.Name": "Combat Settings Menu",
        "playerSettingsMenu.Name": "QoL Menu",
        "hideRollMenu.Name": "Hide Roll Menu",
        "incapacitationRollMenu.Name": "Incapacitation Roll Menu"
      },
      "blindRoll.name": "All skill checks as blind roll",
      "blindRoll.hint": "Next 2 settings using for overriding logic",
      "onlySkillBlindRoll.name": "Only blind rolls for specific skills",
      "onlySkillBlindRoll.hint": "Add skills using comma. Has bigger priority",
      "skipSkillBlindRoll.name": "Skip blind rolls for skills",
      "skipSkillBlindRoll.hint": "Add skills using comma",
      "hiddenTokenBlindRoll.name": "Hidden token rolls are blind",
      "hiddenTokenBlindRoll.hint": "",
      "hidePrivateGMRolls.name": "Hide Private GM Rolls",
      "hidePrivateGMRolls.hint": "",
      "hidePrivatePlayerRolls.name": "Hide Private Player Rolls",
      "hidePrivatePlayerRolls.hint": "",
      "avoidNoticeRoll.name": "Roll when activate Exploration Activity",
      "avoidNoticeRoll.hint": "Set value from roll for Exploration Activity like Avoid Notice",
      "stealthRollInitiative.name": "Use last Stealth Roll as initiative",
      "stealthRollInitiative.hint": "Use last result from Stealth/Hidden/Sneak as initiative",
      "avoidNoticeRollSecret.name": "Exploration Activity Roll in secret",
      "avoidNoticeRollSecret.hint": "If enabled - Exploration Activity Roll in secret, hide result from PCs at Party Sheet",
      "flatCheck.name": "Roll basic flat checks",
      "flatCheck.hint": "Flat checks - Stupefied, Confused, Deafened, Grabbed, Blinded, Dazzled, Hidden, Concealed, Invisible, Undetected",
      "basicActionRoll.name": "Basic Action Roll",
      "basicActionRoll.hint": "Posting basic action in chat trigger related roll",
      "minMaxDamage.name": "Update damage to min/max value",
      "minMaxDamage.hint": "",
      "deleteExploration.name": "Delete exploration activities when combat start",
      "deleteExploration.hint": "",
      "sustainedSpells.name": "Sustained Spells",
      "sustainedSpells.hint": "Notification of actor to sustain any action or spell with the sustain trait",
      "openNpcSheet.name": "Open NPC Sheet during encounter",
      "openNpcSheet.hint": "",
      "allSpellsAuditory.name": "All spells have Auditory trait excluding spells with Subtle traits",
      "allSpellsAuditory.hint": "This feature need for Flat check - Deafened",
      "pingMessage.name": "Add ping button to all chat cards",
      "pingMessage.hint": "Have a way to alert user of each actor useful for finding which creature the damage belongs to",
      "useAutomationThaumaturge.name": "Use automation for Thaumaturge class",
      "useAutomationThaumaturge.hint": "Turn off if there are conflicts with EV module",
      "fastHealingTime.name": "Apply fast healing when time changed",
      "fastHealingTime.hint": "",
      "removeExplorationActivity.name": "Remove all Exploration Activities after a rest",
      "removeExplorationActivity.hint": "",
      "conditionDC.name": "Set DC of condition when added to Actor",
      "conditionDC.hint": "Right now only for sickened",
      "partyVision.name": "Auto Toggle Shared Party Vision during encounter",
      "partyVision.hint": "Off for combat, on when encounter ended",
      "highlightSpells.name": "Highlight Heightened version of Spell",
      "highlightSpells.hint": "",
      "showEffectRelationship.name": "Show Effect Relationship",
      "showEffectRelationship.hint": "",
      "showEffectRelationship.choices.no": "No",
      "showEffectRelationship.choices.press": "When press Alt",
      "showEffectRelationship.choices.always": "Always show effects relationships",
      "incapacitation.name": "Incapacitation mode",
      "incapacitation.hint": ""
    }
  }
}